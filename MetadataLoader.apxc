public class MetadataLoader implements Metadata.DeployCallback {
    
    public void handleResult(Metadata.DeployResult result, Metadata.DeployCallbackContext context) {
        if (result.status == Metadata.DeployStatus.Succeeded) {
            System.debug(' success : '+ result);
        } else {
            System.debug(' fail : '+ result);
        }
    }
    
    public static void createUpdateMetadata(String fullName, String label, Map<String, Object> fieldWithValuesMap){
        Metadata.CustomMetadata customMetadata =  new Metadata.CustomMetadata();
        customMetadata.fullName = fullName;
        customMetadata.label = label;

        for(String key : fieldWithValuesMap.keySet()){
            Metadata.CustomMetadataValue customField = new Metadata.CustomMetadataValue();
            customField.field = key;
            customField.value = fieldWithValuesMap.get(key); 
            customMetadata.values.add(customField);
        }
        
        Metadata.DeployContainer mdContainer = new Metadata.DeployContainer();
        mdContainer.addMetadata(customMetadata);
        MyTest_InsertMetadata callback = new MyTest_InsertMetadata();
        Id jobId = Metadata.Operations.enqueueDeployment(mdContainer, callback);
    }

}

EXECUTE ANONYMOUS:

//method to get Static Resource file and covert to List<String> data type
StaticResource sr = [SELECT Id, Body FROM StaticResource WHERE Name = 'suburb_list'];
List<String> sr_list = new List<String>();
Map<Integer,String> sr_map = new Map<Integer,String>();
String lines = sr.Body.toString();
//split static resource body<Blob> data type --> convert to list data type
for(String i : lines.split('\n')) {
	sr_list.add(i);
}
Integer key = 1;
for (Integer i=0; i<sr_list.size(); i++) {
	sr_map.put(key, sr_list[i]);
	key++;
}

//System.debug(sr_map);

for (Integer i=1; i<=sr_map.size(); i++) {
	Map<String, Object> maptest = new Map<String, Object>();
	maptest.put('Accept__c',);
	maptest.put('Authorization__c',);
	maptest.put('Client_Id__c',);
    	maptest.put('Client_Secret__c',);
	maptest.put('Content_Type__c',);
    	maptest.put('Display_Order__c',);
    	maptest.put('Description__c',);
	maptest.put('Domain__c',);
    	maptest.put('Endpoint__c',);
	maptest.put('Endpoint_2__c',);
	maptest.put('Endpoint_Dev__c',);
	maptest.put('Endpoint_QA__c',);
	maptest.put('Endpoint_Stage__c',);
	maptest.put('Endpoint_Prod__c',);
    	maptest.put('Method__c',);
	maptest.put('Notes__c',);
    	maptest.put('Password__c',);
	maptest.put('Response_Body__c',);
	maptest.put('Request_Body__c',);
    	maptest.put('Username__c',);
	MetadataLoader.createUpdateMetadata('Identity_Proxy.Organization','Organization'+i,maptest);
    //System.debug(sr_map);
}
